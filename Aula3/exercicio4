def max_product_in_matrix(matrix):
    n = len(matrix)
    max_product = 0

    for i in range(n):
        for j in range(n - 4):
            product = matrix[i][j] * matrix[i][j + 1] * matrix[i][j + 2] * matrix[i][j + 3] * matrix[i][j + 4]
            max_product = max(max_product, product)

    for i in range(n - 4):
        for j in range(n):
            product = matrix[i][j] * matrix[i + 1][j] * matrix[i + 2][j] * matrix[i + 3][j] * matrix[i + 4][j]
            max_product = max(max_product, product)

    for i in range(n - 4):
        for j in range(n - 4):
            product = matrix[i][j] * matrix[i + 1][j + 1] * matrix[i + 2][j + 2] * matrix[i + 3][j + 3] * matrix[i + 4][j + 4]
            max_product = max(max_product, product)

    for i in range(n - 4):
        for j in range(4, n):
            product = matrix[i][j] * matrix[i + 1][j - 1] * matrix[i + 2][j - 2] * matrix[i + 3][j - 3] * matrix[i + 4][j - 4]
            max_product = max(max_product, product)

    return max_product

def main():
    matrix = [
        [2, 1, 1, 1, 1],
        [1, 2, 1, 1, 1],
        [1, 1, 2, 1, 1],
        [1, 1, 1, 2, 1],
        [1, 1, 1, 1, 2]
    ]
    
    result = max_product_in_matrix(matrix)
    print("The largest product of a sequence of 5 consecutive numbers in the matrix is:", result)

main()
